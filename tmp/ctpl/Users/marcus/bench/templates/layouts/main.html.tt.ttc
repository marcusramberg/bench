use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1296916614',
        'name' => '/Users/marcus/bench/templates/layouts/main.html.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "  <!doctype html>\n  <html>\n  <head>\n    <title>Dancr</title>\n    <link rel=stylesheet type=text/css href=\"";
#line 5 "/Users/marcus/bench/templates/layouts/main.html.tt"
    $output .=  $stash->get('css_url');
    $output .=  "\">\n  </head>\n  <body>\n    <div class=page>\n    <h1>Dancr</h1>\n       <div class=metanav>\n       ";
#line 15 "/Users/marcus/bench/templates/layouts/main.html.tt"
    if (!($stash->get(['c', 0, 'session', [ 'logged_in' ]]))) {
    $output .=  "\n         <a href=\"";
#line 12 "/Users/marcus/bench/templates/layouts/main.html.tt"
    $output .=  $stash->get('login_url');
    $output .=  "\">log in</a>\n       ";
    }
    else {
    $output .=  "\n         <a href=\"";
#line 14 "/Users/marcus/bench/templates/layouts/main.html.tt"
    $output .=  $stash->get('logout_url');
    $output .=  "\">log out</a>\n       ";
    }
    
    $output .=  "\n    </div>\n    ";
#line 19 "/Users/marcus/bench/templates/layouts/main.html.tt"
    if ($stash->get('msg')) {
    $output .=  "\n      <div class=flash> ";
#line 18 "/Users/marcus/bench/templates/layouts/main.html.tt"
    $output .=  $stash->get('msg');
    $output .=  " </div>\n    ";
    }
    
    $output .=  "\n    ";
#line 20 "/Users/marcus/bench/templates/layouts/main.html.tt"
    $output .=  $stash->get(['c', 0, 'content', 0]);
    $output .=  "\n  </div>\n  </body>\n  </html>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
